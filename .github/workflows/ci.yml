name: Essencium CI

on:
  push:
  workflow_dispatch:

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true

env:
  SONAR_TOKEN: "${{ secrets.SONAR_TOKEN }}"

jobs:
  test-compile-main:
    runs-on: ubuntu-latest
    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'
      - run: mvn -f pom.xml test-compile
        working-directory: essencium-backend
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: essencium-backend
          retention-days: 1
          path: "./essencium-backend/target/*"

  test-compile-identity-model:
    needs: test-compile-main
    runs-on: ubuntu-latest
    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'
      - uses: actions/download-artifact@v3
        with:
          name: essencium-backend
          path: essencium-backend/target/
      - run: mvn -f pom.xml test-compile
        working-directory: essencium-backend-identity-model
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: essencium-backend-identity-model
          retention-days: 1
          path: "./essencium-backend-identity-model/target/*"

  test-compile-sequence-model:
    needs: test-compile-main
    runs-on: ubuntu-latest
    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'
      - uses: actions/download-artifact@v3
        with:
          name: essencium-backend
          path: essencium-backend/target/
      - run: mvn -f pom.xml test-compile
        working-directory: essencium-backend-sequence-model
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: essencium-backend-sequence-model
          retention-days: 1
          path: "./essencium-backend-sequence-model/target/*"

  test-compile-uuid-model:
    needs: test-compile-main
    runs-on: ubuntu-latest
    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'
      - uses: actions/download-artifact@v3
        with:
          name: essencium-backend
          path: essencium-backend/target/
      - run: mvn -f pom.xml test-compile
        working-directory: essencium-backend-uuid-model
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: essencium-backend-uuid-model
          retention-days: 1
          path: "./essencium-backend-uuid-model/target/*"

  test-compile-development:
    needs:
      - test-compile-main
      - test-compile-identity-model
      - test-compile-sequence-model
      - test-compile-uuid-model
    runs-on: ubuntu-latest
    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'
      - uses: actions/download-artifact@v3
        with:
          name: essencium-backend
          path: essencium-backend/target/
      - uses: actions/download-artifact@v3
        with:
          name: essencium-backend-identity-model
          path: essencium-backend-identity-model/target/
      - uses: actions/download-artifact@v3
        with:
          name: essencium-backend-sequence-model
          path: essencium-backend-sequence-model/target/
      - uses: actions/download-artifact@v3
        with:
          name: essencium-backend-uuid-model
          path: essencium-backend-uuid-model/target/
      - run: mvn -f pom.xml test-compile
        working-directory: essencium-backend-development
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: essencium-backend-development
          retention-days: 1
          path: "./essencium-backend-development/target/*"

  unit-tests:
    needs: test-compile-main
    runs-on: ubuntu-latest
    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'
      - run: mvn '-Dskip.integration.tests' verify -Djacoco.destFile=exportJacoco/jacoco-unit.exec
        working-directory: essencium-backend
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: unit-tests-jacoco
          path: essencium-backend/exportJacoco/jacoco-unit.exec

  integration-tests:
    needs: test-compile-main
    runs-on: ubuntu-latest
    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'
      - run: mvn '-Dskip.unit.tests' verify -Djacoco.destFile=exportJacoco/jacoco-integration.exec
        working-directory: essencium-backend
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: integration-tests-jacoco
          path: essencium-backend/exportJacoco/jacoco-integration.exec

  merge-jacoco-report:
    name: Jacoco Merge Results
    needs:
      - unit-tests
      - integration-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'
      - uses: actions/download-artifact@v3
        with:
          name: integration-tests-jacoco
          path: essencium-backend/target/
      - uses: actions/download-artifact@v3
        with:
          name: unit-tests-jacoco
          path: essencium-backend/target/
      - name: merge results
        run: |
          mvn jacoco:merge package jacoco:report -DskipTests=true -Dskip.unit.tests -Dskip.integration.tests verify
        working-directory: essencium-backend
      - name: Upload jacoco coverage despite the check result
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: coverage-results-report
          path: essencium-backend/target/site/jacoco/
          if-no-files-found: error

  trivy-repo-scan:
    needs:
      - unit-tests
      - integration-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './essencium-backend'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'UNKNOWN,HIGH,CRITICAL'
          # trivy-config: trivy.yaml
      # Only available with GitHub Advanced Security
      #- name: Upload Trivy scan results to GitHub Security tab
      #  uses: github/codeql-action/upload-sarif@v3
      #  with:
      #    sarif_file: 'trivy-results.sarif'

#  sonarqube:
#    needs:
#      - compile
#      - unit-tests
#      - integration-tests
#    runs-on: ubuntu-latest
#    container:
#      image: maven:3-openjdk-17-slim
#    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }} || ${{ github.event.pull_request.number }} == null
#    timeout-minutes: 60
#    env:
#      MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"
#      GIT_DEPTH: 1000
#    steps:
#      - uses: actions/checkout@v3.5.0
#        with:
#          fetch-depth: 1000
#      - uses: actions/cache@v3.3.1
#        with:
#          path: ".m2/repository"
#          key: "${{ github.ref }}"
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: compile
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: unit-tests
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: integration-tests
#      - run: cd ./essencium-backend
#      - run: mvn sonar:sonar -D sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml,target/site/jacoco-it/jacoco.xml -D sonar.junit.reportPaths=target/surefire-reports,target/failsafe-reports -D sonar.tests=src/test,src/testIntegration -D sonar.branch.name=${{ github.ref }} -D sonar.qualitygate.wait=false

#  sonarqube_merge_request:
#    needs:
#      - compile
#      - unit-tests
#      - integration-tests
#    runs-on: ubuntu-latest
#    container:
#      image: maven:3-openjdk-17-slim
#    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }} || ${{ github.event.pull_request.number }}
#    timeout-minutes: 60
#    env:
#      MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"
#      GIT_DEPTH: 1000
#    steps:
#      - uses: actions/checkout@v3.5.0
#        with:
#          fetch-depth: 1000
#      - uses: actions/cache@v3.3.1
#        with:
#          path: ".m2/repository"
#          key: "${{ github.ref }}"
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: compile
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: unit-tests
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: integration-tests
#      - run: cd ./essencium-backend
#      - run: mvn sonar:sonar -D sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml,target/site/jacoco-it/jacoco.xml -D sonar.junit.reportPaths=target/surefire-reports,target/failsafe-reports -D sonar.tests=src/test,src/testIntegration -D sonar.pullrequest.key=${{ github.event.pull_request.number }} -D sonar.pullrequest.branch=${{ github.event.pull_request.head.ref }} -D sonar.pullrequest.base=${{ github.event.pull_request.base.ref }} -D sonar.qualitygate.wait=false

#  dep-track-backend:
#    needs:
#      - unit-tests
#      - integration-tests
#    runs-on: ubuntu-latest
#    container:
#      image: maven:3-openjdk-17-slim
#    if: # Unable to map conditional expression to GitHub Actions equivalent
#    #         ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }} || ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH
#    timeout-minutes: 60
#    env:
#      MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"
#    steps:
#      - uses: actions/checkout@v3.5.0
#        with:
#          fetch-depth: 50
#      - uses: actions/cache@v3.3.1
#        with:
#          path: ".m2/repository"
#          key: "${{ github.ref }}-mvn"
#      - uses: actions/download-artifact@v3.0.1
#      - run: cd ./essencium-backend
#      - run: mvn cyclonedx:makeBom
#      - run: |
#          curl --location --request POST  "$DTRACK_API_HOST/api/v1/bom" \
#          --header "X-API-Key: $DTRACK_API_TOKEN" \
#          --form "autoCreate=\"true\"" \
#          --form "projectName=essencium-backend-${{ github.repository }}" \
#          --form "projectVersion=$VERSION" \
#          --form "bom=@\"target/bom.json\""

  package-dev:
    needs:
      - integration-tests
      - unit-tests
      - test-compile-main
      - test-compile-identity-model
      - test-compile-sequence-model
      - test-compile-uuid-model
      - test-compile-development
    runs-on: ubuntu-latest
    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'
      - uses: actions/download-artifact@v3
        with:
          name: essencium-backend
          path: essencium-backend/target/
      - uses: actions/download-artifact@v3
        with:
          name: essencium-backend-identity-model
          path: essencium-backend-identity-model/target/
      - uses: actions/download-artifact@v3
        with:
          name: essencium-backend-sequence-model
          path: essencium-backend-sequence-model/target/
      - uses: actions/download-artifact@v3
        with:
          name: essencium-backend-uuid-model
          path: essencium-backend-uuid-model/target/
      - uses: actions/download-artifact@v3
        with:
          name: essencium-backend-development
          path: essencium-backend-development/target/
      - run: mvn -f essencium-backend/pom.xml install -Dmaven.test.skip=true
      - run: mvn -f essencium-backend-sequence-model/pom.xml install -Dmaven.test.skip=true
      - run: mvn -f essencium-backend-development/pom.xml package -DskipTests
      - run: cd essencium-backend-development/target && java -Djarmode=layertools -jar *.jar extract
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: essencium-backend-development
          retention-days: 1
          path: essencium-backend-development/target/*

  docker-build-and-publish:
    needs: package-dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set POM version env variable
        run: echo "POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        working-directory: essencium-backend-development
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      #- name: Login to Docker Hub
      #  uses: docker/login-action@v2
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./essencium-backend-development/
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/frachtwerk/essencium-backend-development:latest
            ghcr.io/frachtwerk/essencium-backend-development:${{ env.RELEASE_VERSION }}-${{ github.ref }}
      #      frachtwerk/essencium-backend-development:latest
      #      frachtwerk/essencium-backend-development:${{ env.RELEASE_VERSION }}-${{ github.ref }}

# Only available with GitHub Advanced Security
#  docker-build-dev:
#    needs: package-dev
#    runs-on: ubuntu-latest
#    container:
#      image: gcr.io/kaniko-project/executor:debug
#      options: "--entrypoint "
#    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }}
#    timeout-minutes: 60
#    env:
#      MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"
#    steps:
#      - uses: actions/checkout@v3.5.0
#        with:
#          fetch-depth: 50
#      - uses: actions/cache@v3.3.1
#        with:
#          path: ".m2/repository"
#          key: "${{ github.ref }}"
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: package-dev
#      - run: echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
#      - run: if [ ${{ github.ref }} == 'master' ]; then echo "publishing new latest-tag"; fi
#      - run: if [ ${{ github.ref }} == 'master' ]; then /kaniko/executor --context ${{ github.workspace }}/essencium-backend-development --dockerfile ${{ github.workspace }}/essencium-backend-development/Dockerfile --destination $CI_REGISTRY_IMAGE:${{ github.ref }} --destination $CI_REGISTRY_IMAGE:${{ github.sha }} --destination $CI_REGISTRY_IMAGE:latest; else /kaniko/executor --context ${{ github.workspace }}/essencium-backend-development --dockerfile ${{ github.workspace }}/essencium-backend-development/Dockerfile --destination $CI_REGISTRY_IMAGE:${{ github.ref }} --destination $CI_REGISTRY_IMAGE:${{ github.sha }}; fi

# Only available with GitHub Advanced Security
#  postman-test:
#    needs: docker-build-dev
#    runs-on: ubuntu-latest
#    container:
#      image: postman/newman:alpine
#      options: "--entrypoint "
#    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }}
#    timeout-minutes: 60
#    services:
#      backend:
#        image: "$CI_REGISTRY_IMAGE:${{ github.sha }}"
#    env:
#      MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"
#      name: file
#      SPRING_DATASOURCE_URL: jdbc:h2:mem:testdb
#      APP_URL: http://backend:8098
#    steps:
#      - uses: actions/checkout@v3.5.0
#        with:
#          fetch-depth: 50
#      - uses: actions/cache@v3.3.1
#        with:
#          path: ".m2/repository"
#          key: "${{ github.ref }}"
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: docker-build-dev
#      - run: newman --version
#      - run: npm install -g newman-reporter-html
#      - run: newman run postman/api-test.postman_collection.json --env-var BASE_URL=backend:8098 --reporters cli,html,junit --reporter-html-export newman-api-results.html --reporter-junit-export newman-api-results.xml
#      #     # 'artifacts.junit' was not transformed because there is no suitable equivalent in GitHub Actions
#      - uses: actions/upload-artifact@v3.1.1
#        if: always()
#        with:
#          name: "${{ github.job }}"
#          retention-days: 7
#          path: |-
#            newman-api-results.xml
#            newman-api-results.html

#  deploy-snapshot:
#    needs:
#      - compile
#      - unit-tests
#      - integration-tests
#      - trivy-repo-scan
#    runs-on: ubuntu-latest
#    container:
#      image: maven:3-openjdk-17-slim
#    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH
#    timeout-minutes: 60
#    env:
#      MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"
#    steps:
#      - uses: actions/checkout@v3.5.0
#        with:
#          fetch-depth: 50
##          lfs: true
#      - uses: actions/cache@v3.3.1
#        with:
#          path: ".m2/repository"
#          key: "${{ github.ref }}"
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: compile
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: unit-tests
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: integration-tests
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: trivy-repo-scan
#      - run: mvn -f essencium-backend/pom.xml -s ci-settings.xml -Pci-build deploy -DskipTests -Dskip.unit.tests -Dskip.integration.tests --also-make
#  deploy-identity-id-lib-snapshot:
#    needs:
#      - deploy-snapshot
#      - postman-test
#    runs-on: ubuntu-latest
#    container:
#      image: maven:3-openjdk-17-slim
#    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH
#    timeout-minutes: 60
#    env:
#      MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"
#    steps:
#      - uses: actions/checkout@v3.5.0
#        with:
#          fetch-depth: 50
##          lfs: true
#      - uses: actions/cache@v3.3.1
#        with:
#          path: ".m2/repository"
#          key: "${{ github.ref }}"
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: deploy-snapshot
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: postman-test
#      - run: mvn -f essencium-backend-identity-model/pom.xml -s ci-settings.xml -Pci-build deploy --also-make
#  deploy-sequence-id-lib-snapshot:
#    needs:
#      - deploy-snapshot
#      - postman-test
#    runs-on: ubuntu-latest
#    container:
#      image: maven:3-openjdk-17-slim
#    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH
#    timeout-minutes: 60
#    env:
#      MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"
#    steps:
#      - uses: actions/checkout@v3.5.0
#        with:
#          fetch-depth: 50
#      - uses: actions/cache@v3.3.1
#        with:
#          path: ".m2/repository"
#          key: "${{ github.ref }}"
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: deploy-snapshot
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: postman-test
#      - run: mvn -f essencium-backend-sequence-model/pom.xml -s ci-settings.xml -Pci-build deploy --also-make
#  deploy-uuid-id-lib-snapshot:
#    needs:
#      - deploy-snapshot
#      - postman-test
#    runs-on: ubuntu-latest
#    container:
#      image: maven:3-openjdk-17-slim
#    if: ${{ github.ref }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.event.pull_request.number }} || ${{ github.ref }} == $CI_DEFAULT_BRANCH
#    timeout-minutes: 60
#    env:
#      MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"
#    steps:
#      - uses: actions/checkout@v3.5.0
#        with:
#          fetch-depth: 50
#      - uses: actions/cache@v3.3.1
#        with:
#          path: ".m2/repository"
#          key: "${{ github.ref }}"
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: deploy-snapshot
#      - uses: actions/download-artifact@v3.0.1
#        with:
#          name: postman-test
#      - run: mvn -f essencium-backend-uuid-model/pom.xml -s ci-settings.xml -Pci-build deploy --also-make
